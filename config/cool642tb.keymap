#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 1
#define SCROLL 2
#define NUM 3

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        comb1tab {
            bindings = <&kp TAB>;
            key-positions = <11 10>;
        };

        comb2esc {
            bindings = <&kp LS(ESCAPE)>;
            key-positions = <0 1>;
        };

        comb3shift {
            bindings = <&kt LEFT_SHIFT>;
            key-positions = <22 23>;
        };

        combo4bksp {
            bindings = <&kp DELETE>;
            key-positions = <9 8>;
        };

        combo5enter {
            bindings = <&kp ENTER>;
            key-positions = <20 21>;
        };

        combo6shift {
            bindings = <&sk RIGHT_SHIFT>;
            key-positions = <32 33>;
        };

        combo7delet {
            bindings = <&mo 5>;
            key-positions = <40 41>;
        };

        combo8task {
            bindings = <&kp LS(LC(ESCAPE))>;
            key-positions = <0 1>;
        };

        combo9lang1 {
            bindings = <&kp LANG_HANJA>;
            key-positions = <39 38>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        pass1: pass1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANG_HANJA &kp LS(K) &kp O &kp B &kp A &kp T &kp A &kp K &kp U &kp N8 &kp N3 &kp ENTER>;
            label = "PASS1";
        };

        pass2: pass2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANG_HANJA &kp J &kp R &kp E &kp D &kp N2 &kp N0 &kp N2 &kp N5 &kp ENTER>;
            label = "PASS2";
        };

        pass3: pass3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANG_HANJA &kp J &kp R &kp E &kp D &kp N2 &kp N0 &kp N1 &kp N9 &kp ENTER>;
            label = "PASS3";
        };

        mail1: mail1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANG_HANJA &kp T &kp A &kp K &kp MINUS &kp K &kp O &kp B &kp A &kp Y &kp A &kp S &kp H &kp H &kp I &kp AT &kp J &kp R &kp E &kp D &kp DOT &kp C &kp O &kp DOT &kp J &kp P>;
            label = "MAILADRESS";
        };

        mail2: mail2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANG_HANJA &kp T &kp A &kp K &kp U &kp N8 &kp N3 &kp AT &kp I &kp C &kp L &kp O &kp U &kp D &kp DOT &kp C &kp O &kp M>;
            label = "MAILADRESS";
        };

        LP1: adress {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANG_HANJA &kp LS(T) &kp LS(H) &kp LS(E) &kp SPACE &kp LS(L) &kp LS(I) &kp LS(N) &kp LS(K) &kp LS(P) &kp LS(I) &kp LS(L) &kp LS(L) &kp LS(A) &kp LS(R) &kp SPACE &kp N1 &kp SPACE &kp LS(S) &kp LS(O) &kp LS(U) &kp LS(T) &kp LS(H) &kp SPACE &kp N1 &kp N2 &kp LS(F)>;
            label = "ADRESS";
        };

        JV: JV {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANGUAGE_1 &kp LPAR &kp RPAR &kp ENTER &kp LANG_HANJA &kp LEFT_ARROW &kp LS(J) &kp LS(V) &kp RIGHT &kp LANGUAGE_4>;
            label = "JV";
        };

        JR: JR {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANGUAGE_1 &kp LPAR &kp RPAR &kp ENTER &kp LANG_HANJA &kp LEFT_ARROW &kp LS(J) &kp LS(R) &kp RIGHT &kp LANGUAGE_1>;
            label = "JR";
        };

        machi: machi {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANGUAGE_1 &kp LPAR &kp RPAR &kp ENTER &kp LEFT_ARROW &kp M &kp A &kp C &kp H &kp I &kp S &kp E &kp N &kp N &kp SPACE &kp ENTER &kp RIGHT>;
            label = "MACHI";
        };

        kara: kara {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANGUAGE_1 &kp K &kp A &kp R &kp A &kp SPACE &kp ENTER &kp LANG_HANJA>;
            label = "KARA";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        hold_tap: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            quick-tap-ms = <50>;
            require-prior-idle-ms = <(-1)>;
            tapping-term-ms = <150>;
        };

        mouse_key_press: mouse_key_press {
            compatible = "zmk,behavior-mouse-key-press";
            label = "MOUSE_KEY_PRESS";
            #binding-cells = <1>;
        };

        axis: axis {
            compatible = "zmk,behavior-input-two-axis";
            label = "AXIS";
            #binding-cells = <1>;
            x-input-code = <5>;
            y-input-code = <5>;
            time-to-max-speed-ms = <0>;
        };

        encoder_msc_down_up: encoder_msc_down_up {
            compatible = "zmk,behavior-sensor-rotate";
            label = "ENCODER_MSC_DOWN_UP";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            tap-ms = <20>;
        };

        mouse_scrl: mouse_wheel_scrl {
            compatible = "zmk,behavior-sensor-rotate-var";
            #sensor-binding-cells = <2>;
            bindings = <&msc>, <&msc>;

            tap-ms = <10>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E         &kp R                            &kp T                                                                &kp Y                   &kp U  &kp I     &kp O     &kp P
&kp A             &kp S         &kp D         &kp F                            &kp G                        &kp ENTER               &kp LANG_HANJA  &kp H                   &kp J  &kp K     &kp L     &mo 2
&kp Z             &kp X         &kp C         &kp V                            &kp B                        &kp BACKSPACE           &kp LANGUAGE_1  &kp N                   &kp M  &mkp MB1  &mkp MB3  &mkp MB2
&kp LEFT_CONTROL  &kp LEFT_WIN  &kp LEFT_ALT  &hold_tap LEFT_SHIFT LANG_HANJA  &lt_to_layer_0 3 LANGUAGE_1  &lt_to_layer_0 5 SPACE  &kp BACKSPACE   &lt_to_layer_0 4 ENTER                             &kp RIGHT_CONTROL
            >;

            sensor-bindings = <&inc_dec_kp UP_ARROW DOWN_ARROW>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans    &mo 2
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                              &trans
            >;

            sensor-bindings = <&inc_dec_kp UP_ARROW DOWN_ARROW>;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &mo 2
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                          &trans
            >;

            sensor-bindings = <&inc_dec_kp UP_ARROW DOWN_ARROW>;
        };

        NUM_SIGN {
            bindings = <
&kp ESCAPE   &kp EXCLAMATION    &kp AT_SIGN        &kp HASH          &kp DOLLAR                             &kp SLASH     &kp N7        &kp N8        &kp N9        &kp MINUS
&kp TAB      &kp PERCENT        &kp LS(NUMBER_6)   &kp LS(NUMBER_7)  &kp SINGLE_QUOTE  &trans  &kp INT_YEN  &kp LS(N8)    &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp KP_PLUS
&kp INT_YEN  &kp RIGHT_BRACKET  &kp RIGHT_BRACKET  &kp LS(NUMBER_8)  &kp LS(NUMBER_9)  &trans  &kp DOT      &kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp CARET
&trans       &trans             &trans             &trans            &trans            &trans  &kp DEL      &trans                                                  &kp PERIOD
            >;

            sensor-bindings = <&inc_dec_kp UP_ARROW DOWN_ARROW>;
        };

        FUNCTION+ARROW {
            bindings = <
&kp F1   &kp F2   &kp F3     &kp F4         &kp F5                            &kp SEMICOLON  &kp MINUS   &kp UP           &kara      &kp QUESTION
&kp F6   &kp F7   &kp F8     &kp F9         &kp F10           &trans  &trans  &kp AMPERSAND  &kp LEFT    &kp DOWN         &kp RIGHT  &kp LBKT
&kp F11  &kp F12  &kp EQUAL  &kp LESS_THAN  &kp GREATER_THAN  &trans  &trans  &kp COMMA      &kp PERIOD  &kp LC(LS(TAB))  &kp LC(W)  &kp LC(TAB)
&trans   &trans   &trans     &trans         &trans            &trans  &trans  &trans                                                 &kp LS(MINUS)
            >;

            sensor-bindings = <&inc_dec_kp UP_ARROW DOWN>;
        };

        MACRO {
            bindings = <
&kp LC(LS(ESC))  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &JV                     &kp LG(LS(S))  &mail1     &mail2     &trans     &trans
&trans           &bt BT_SEL 3  &bt BT_SEL 4  &trans        &machi  &trans  &trans  &pass3         &pass2     &pass1     &LP1       &trans
&kp LS(Z)        &kp LS(X)     &kp LS(C)     &kp LS(V)     &JR     &trans  &trans  &kp LS(Z)      &kp LS(X)  &kp LS(C)  &kp LS(V)  &kp LS(B)
&trans           &trans        &trans        &trans        &trans  &trans  &trans  &trans                                          &trans
            >;

            sensor-bindings = <&inc_dec_kp UP_ARROW DOWN>;
        };
    };
};
